readline 读到下一个换行符，会把读入内容做成一个字符串返回。一行最后的换行符作为字符串的最后字符。这样，如果读到一个空行，函数返回只包含换行符的串；
而文件读完时函数返回空串。
一般操作模式是：
inf = open(...)
while True:
    line = inf.readline()   #判断文件是否已经读完，空行表示假
    if not line:
        inf.close()
        break
        ...............      #处理一行文本
        
程序开始时，环境中只有内置名字空间和全局名字空间，全局名字空间作为当前名字空间。

按行处理是最常见的正文文件处理方式，将这种文件看作行的序列。
为了方便这种处理，Python把正文读文件也作为一种可迭代对象，允许直接用它作为for语句循环变量的数据源，每次迭代得到一行。这样，上述处理过程就可以改写为：

for line in inf :          #设infr的值是正文读文件对象
    ......line.....         #处理一行文本
inf.close()

f.readlines()与read类似，也是一次读入整个文件的内容，但它返回一个表，其中元素是一系列字符串，每个串是文件里的一个字符行。 调用这个函数时也可以提供
一个整数参数n,说明在本次操作中读入的行数限制。readlines同样维持每行最后的换行符。

需要注意read, 它将创建一个包含整个文件内容的字符串，如果文件很大，这个串就很长。

